#include <cstring>#include<string>#include <assert.h>#define SIZE 9class Clock {private:    int second;public:    Clock() {        second = 0;    }    Clock(int hh, int mm, int ss) {        second = ss + (mm * 60) + (hh * 60 * 60);    }public:    void Time(std::string timeString, int size) {        //here the query asked..        //convert second into hh::mm:ss        //timeString[0]&[1] -> hh        // [3][4]->mm          //  [6][7]->ss          int hh = 0, mm = 0;        while (second >= 60) {            mm++;            if (mm == 60) {                hh++;                mm = 0;            }            second--;        }        timeString[0] = hh / 10;        timeString[1] = hh % 10;        timeString[3] = mm / 10;        timeString[4] = mm % 10;        timeString[6] = second / 10;        timeString[7] = second % 10;    }    void Tick() {        //ek second pudhe sarknar call kelyavar.        second++;        if (second == 86400)            second = 0;    }};int main() {    Clock wallClock;    char timeString[SIZE] = { 0 };    wallClock.Time(timeString, SIZE);    assert(strcmp(timeString, "00:00:00") == 0);    for (int i = 0; i < 12345; i++)        wallClock.Tick();    wallClock.Time(timeString, SIZE);    assert(strcmp(timeString, "03:25:45") == 0);    Clock tableClock(10, 9, 59);    tableClock.Tick();    tableClock.Time(timeString, SIZE);    assert(strcmp(timeString, "10:10:00") == 0);}